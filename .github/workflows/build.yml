name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: package-lock.json

    - run: npm ci
    - name: Build
      run: npm run build

    # Guardar los resultados de la compilación como un artifact
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-artifact
        path: build/ # Cambia "build/" por el directorio donde se encuentra tu compilación

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Construir la imagen Docker
    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/nombre-imagen:latest .

    # Subir la imagen a Docker Hub
    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/nombre-imagen:latest

  # Ejemplo de un segundo trabajo que utiliza el artifact
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: build-artifact
        path: ./deployed-artifact/

    # Paso de ejemplo usando el artifact descargado
    - name: Deploy artifact
      run: echo "Deploying artifact from ./deployed-artifact/"
